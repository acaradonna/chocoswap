/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FeeSplitter,
  FeeSplitterInterface,
} from "../../contracts/FeeSplitter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_serviceTreasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_founderPayout",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_serviceBps",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidBps",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "serviceAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "founderAmount",
        type: "uint256",
      },
    ],
    name: "FeesSplit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "serviceTreasury",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "founderPayout",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "serviceBps",
        type: "uint16",
      },
    ],
    name: "SplitUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "founderPayout",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceBps",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceTreasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "splitToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_serviceTreasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_founderPayout",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_serviceBps",
        type: "uint16",
      },
    ],
    name: "updateSplit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161087838038061087883398101604081905261002f916101bd565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610151565b506001600160a01b038316158061007c57506001600160a01b038216155b1561009a5760405163d92e233d60e01b815260040160405180910390fd5b6127108161ffff1611156100c15760405163c6cc5d7f60e01b815260040160405180910390fd5b600180546001600160a01b038581166001600160a01b031990921682179092556002805461ffff8516600160a01b81026001600160b01b0319909216948716948517919091179091556040805192835260208301939093528183015290517febb7ea411b3affe1b2b14c090e282db7584c2e79af49cc99da4aac2fefbe26e69181900360600190a150505061020b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146101b857600080fd5b919050565b6000806000606084860312156101d257600080fd5b6101db846101a1565b92506101e9602085016101a1565b9150604084015161ffff8116811461020057600080fd5b809150509250925092565b61065e8061021a6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ed57806393ee9db4146100fe578063a3bc8c5f14610111578063f2fde38b1461013957600080fd5b806305d66ba41461008d5780630dbf0ca2146100bd578063249bc14b146100d2578063715018a6146100e5575b600080fd5b6001546100a0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d06100cb366004610531565b61014c565b005b6100d06100e0366004610583565b610243565b6100d061037a565b6000546001600160a01b03166100a0565b6002546100a0906001600160a01b031681565b60025461012690600160a01b900461ffff1681565b60405161ffff90911681526020016100b4565b6100d0610147366004610583565b61038e565b6101546103d1565b6001600160a01b038316158061017157506001600160a01b038216155b1561018f5760405163d92e233d60e01b815260040160405180910390fd5b6127108161ffff1611156101b65760405163c6cc5d7f60e01b815260040160405180910390fd5b600180546001600160a01b038581166001600160a01b031990921682179092556002805461ffff8516600160a01b81026001600160b01b0319909216948716948517919091179091556040805192835260208301939093528183015290517febb7ea411b3affe1b2b14c090e282db7584c2e79af49cc99da4aac2fefbe26e69181900360600190a1505050565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561028a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ae91906105a7565b9050806000036102bc575050565b600254600090612710906102db90600160a01b900461ffff16846105d6565b6102e591906105f3565b905060006102f38284610615565b600154909150610310906001600160a01b038681169116846103fe565b60025461032a906001600160a01b038681169116836103fe565b604080516001600160a01b0386168152602081018490529081018290527fca9a62a470c3395144af9bbe269cdc08769fbb18f3068f1fda10983f30fa2e069060600160405180910390a150505050565b6103826103d1565b61038c6000610455565b565b6103966103d1565b6001600160a01b0381166103c557604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6103ce81610455565b50565b6000546001600160a01b0316331461038c5760405163118cdaa760e01b81523360048201526024016103bc565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526104509084906104a5565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080602060008451602086016000885af1806104c8576040513d6000823e3d81fd5b50506000513d915081156104e05780600114156104ed565b6001600160a01b0384163b155b1561051657604051635274afe760e01b81526001600160a01b03851660048201526024016103bc565b50505050565b6001600160a01b03811681146103ce57600080fd5b60008060006060848603121561054657600080fd5b83356105518161051c565b925060208401356105618161051c565b9150604084013561ffff8116811461057857600080fd5b809150509250925092565b60006020828403121561059557600080fd5b81356105a08161051c565b9392505050565b6000602082840312156105b957600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176105ed576105ed6105c0565b92915050565b60008261061057634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156105ed576105ed6105c056fea2646970667358221220c349a937105e17ca855967f3d3e34047991625ee93c4ad1d6ca4493e97339a0064736f6c63430008180033";

type FeeSplitterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeSplitterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeSplitter__factory extends ContractFactory {
  constructor(...args: FeeSplitterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _serviceTreasury: AddressLike,
    _founderPayout: AddressLike,
    _serviceBps: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _serviceTreasury,
      _founderPayout,
      _serviceBps,
      overrides || {}
    );
  }
  override deploy(
    _serviceTreasury: AddressLike,
    _founderPayout: AddressLike,
    _serviceBps: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _serviceTreasury,
      _founderPayout,
      _serviceBps,
      overrides || {}
    ) as Promise<
      FeeSplitter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FeeSplitter__factory {
    return super.connect(runner) as FeeSplitter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeSplitterInterface {
    return new Interface(_abi) as FeeSplitterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FeeSplitter {
    return new Contract(address, _abi, runner) as unknown as FeeSplitter;
  }
}
